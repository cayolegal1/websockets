Socket io como sabemos es una librería que permite establecer comunicación bidireccional en tiempo real entre un cliente y un servidor. No usa web sockets pero si es uno de sus protocolos (también tiene otras opciones de transporte como Polling (XHR o JSONP)). Este no es un servidor como tal sino un módulo para hacer comunicación bidireccional en tiempo real. Pero se le puede combinar con un server para que pueda tener superpoderes.


En la librería hay una clase llamada Server, que es la encargada de proporcionar una interfaz de programación o una API para que podamos interactuar con clientes conectados a nuestro servidor http y que podamos hacerlo en tiempo real.
    index.js: 
      const {Server} = require('socket.io');

Este recibe en su constructor un servidor como tal, es decir, se valdrá del servidor para poder realizar las peticiones y el se encarga de que las cosas funcionen en tiempo real. Aunque este no soporta directamente las peticiones http, por lo que es necesario crear un servidor http del módulo 'http' para poder hacer peticiones REST con nuestro server de http.

Entonces, existe un método llamado 'createServer' del módulo http que nos servirá para poder pasar por parámetro a la instancia Server de socket.io un servidor http para poder realizar peticiones REST.

    index.js: 
      const {Server} = require('socket.io');
      const {createServer} = require('http');

Este método también puede recibir una instancia de otro servidor http, específicamente una instancia de la clase http.Server. Eso es lo que es la instancia de Express JS, lo usaremos para que el sea el encargado de manejar nuestras solicitudes http

    index.js: 
      const {Server} = require('socket.io');
      const {createServer} = require('http');
      const express = require('express);
      const app = express();
      const httpServerWithExpress = createServer(app);

Con eso ya tenemos una interfaz o una api para poder programar un servidor en tiempo real

    index.js: 
      const {Server} = require('socket.io');
      const {createServer} = require('http');
      const express = require('express);
      const app = express();
      const httpServerWithExpress = createServer(app);
      const io = Server(httpServerWithExpress);



RESUMEN: Socket io es una librería el cual su principal objetivo es ofrecer una comunicación bidireccional en tiempo real, por defecto no soporta solicitudes http (solicitudes REST). Combinadas la librería y un servidot http podemos proporcionar un servidor http en tiempo real entre uno o más clientes y el servidor

