On, Once y Off
  On ‚Üí Se usa para detectar (o escuchar) un evento varias veces.
  Once ‚Üí Se usa para detectar (o escuchar) un evento una sola vez. Sin importar si el evento se emite varias veces.
  Off ‚Üí Se usa para dejar de escuchar un evento, sin importar que este se siga emitiendo.
üí° El listener del evento no debe ser una funci√≥n an√≥nima, sino una funci√≥n nombrada.

Desde el servidor podemos emitir un evento, y desde el cliente manejar cuantas veces lo queremos procesar. O viceversa.

C√≥digo del servidor:   
    index.js:
      socket.emit("on", "on_event");
      socket.emit("on", "on_event"); 
  
      socket.emit("once", "holi");
      socket.emit("once", "holi"); 
  
      socket.emit("off", "holi");
  
      setTimeout(() => {
          socket.emit("off", "holi");
      }, 3000);

Codigo del cliente:
    views/index.js:
      socket.on("on", () => {
          console.log("Se emite varias veces");
      });
      
      socket.once("once", () => {
          console.log("Se emite una sola vez");
      });
      
      const listener = () => {
          console.log("Se apaga el evento");
      }
      
      socket.on("off", listener);
      
      setTimeout(() => {
          socket.off("off", listener);
      }, 2000);

As√≠ como vemos, el evento holi se esta declarando dos veces, y desde el cliente lo estamos escuchando normalmente con on, el resultado de esto ser√° que cada vez que el servidor emita el evento "on_event", el cliente procesar√° todas las veces que el evento se emita.

Sin embargo, cuando escuchamos un evento con once, por m√°s de que emitamos varias veces el evento, el cliente solo lo procesar√° una vez.

Y con off, podemos cancelar el procesamiento de un evento que pasemos por par√°metro. Dicho evento nos llega desde el server, cuando ejecutamos off, esos eventos ya no lo procesaremos.