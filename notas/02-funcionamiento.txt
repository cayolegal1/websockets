C√≥mo funciona la librer√≠a
Esta librer√≠a se divide en dos partes, Engine io y Socket io.

Engine io
Es el motor de la librer√≠a. Se encarga de establecer la conexi√≥n entre el cliente y el servidor. Maneja las formas de conectarse (Transports), el mecanismo de actualizaci√≥n y detecci√≥n de des-conexiones.

Cuando este inicia una conexi√≥n, el servidor manda cierta informaci√≥n (handshake) que ser√° √∫til para algunos mecanismos de Engine io.

- Transports ‚Üí 
  Socket io conoce a sus mecanismos de conexi√≥n mediante Transports y actualmente tiene 2 formas de conectarse, HTTP Long-Polling y WebSockets.
  
- Mecanismos de actualizaci√≥n ‚Üí En resumen, es la forma que tiene Engine io de cambiar de HTTP Long-Polling a WebSockets.
  Pero, ¬øpor qu√© cambiar√≠a de HTTP Long-Polling a WebSockets? Esto se debe a que socket io primero usa HTTP Long-Polling para conectarse, incluso si WebSockets est√° disponible, debido a que no siempre es posible conectarse mediante estos √∫ltimos y la comunicaci√≥n puede fallar porque algo lo est√° impidiendo (proxys, firewalls, antivirus, etc.).
  
  üí° El recuperarse de este tipo de fallos puede llegar a tomar hasta 10 segundos antes que la aplicaci√≥n empiece a funcionar, esto perjudica la experiencia de usuario.
  
  Luego, Engine io har√° ciertas validaciones para determinar si se pueden usar los WebSockets, en cuyo caso, terminar√° conect√°ndose mediante estos.
  
  Detecci√≥n de des-conexiones ‚Üí Se incluye un mecanismo para detectar cuando un cliente se desconecta.
  
  El cual consiste en revisar cada cierto tiempo (pingInterval) si la conexi√≥n todav√≠a est√° funcionando. Esto lo logra enviando un paquete al cliente desde el servidor, y el cliente tiene cierto tiempo (pingTimeout) para responder ese paquete.
  
  En el caso que cliente no responda, se considera que este se ha desconectado. Pero si el cliente no recibe el paquete en cierto intervalo de tiempo (pingInterval + pingTimeout) se considera como que el servidor se ha desconectado.

Una conexi√≥n se considera cerrada cu√°ndo:

Una solicitud HTTP falla (por ejemplo, el servidor se apaga).
Una conexi√≥n por WebSocket se cierra (por ejemplo, se cierra la ventana).
Se llama al m√©todo socket.disconnect().
Socket io
Es la librer√≠a en s√≠. Por su parte, provee funcionalidades extra sobre Engine io, por ejemplo:

Reconexi√≥n autom√°tica
Packet buffering
Broadcasting
Multiplexing
Manejo de eventos